grammar it.rcpvision.emf.components.dsl.EmfComponentsDsl with
    org.eclipse.xtext.xbase.Xbase

import "http://www.eclipse.org/xtext/common/JavaVMTypes" as types

generate model "http://www.rcpvision.it/emf/components/dsl/EmfComponentsDsl"

Model:
	imports+=Import*
	module = Module;
	
Import:
  'import' importedNamespace = QualifiedNameWithWildcard
;
 
QualifiedNameWithWildcard:
  QualifiedName '.*'?
;

Module:
	'module' name=QualifiedName '{'
		(
			(labelProvider = LabelProvider)?
			&
			(featureLabelProvider = FeatureLabelProvider)?
			&
			(featureProvider = FeatureProvider)?
		)
	'}'
;

LabelProvider:
	{LabelProvider} 'labelProvider' '{'
		((
		'labels' '{'
			labelSpecifications+=LabelSpecification*
		'}'
		)?
		&
		(
		'images' '{'
			imageSpecifications+=LabelSpecification*
		'}'
		)?)
	'}'
;

LabelSpecification:
	parameterType=JvmTypeReference (name=ValidID)?
	'->'
	expression = XExpression
;

FeatureLabelProvider:
	{FeatureLabelProvider} 'featureLabelProvider' '{'
		((
		'labels' '{'
			labelSpecifications+=FeatureLabelSpecification*
		'}'
		)?)
	'}'
;

FeatureLabelSpecification:
	parameterType=[types::JvmType|QualifiedName] ':' feature=XFeatureCall
	'->'
	expression = XExpression
;

FeatureProvider:
	{FeatureProvider} 'featureProvider' '{'
		((
		'features' '{'
			featureSpecifications+=FeatureSpecification*
		'}'
		)?)
	'}'
;

FeatureSpecification:
	parameterType=[types::JvmType|QualifiedName] 
	'->'
	features += XFeatureCall (',' features += XFeatureCall)*
;
